name: Continuous Delivery to the Replicated platform

on:
  push:
    paths:
    - '**'
    - '!**.md'
    - '!doc/**'
    - '!**.png'

jobs:
  package-chart:
    runs-on: ubuntu-latest
    outputs:
      chart: ${{ steps.package-chart.outputs.package }}
    steps:
    - uses: actions/checkout@v3
    - name: Get release channel
      id: get-channel
      shell: bash
      run: |
        if [[ ${GITHUB_REF_NAME} == "main" ]] ; then
          echo "channel=Unstable" >> $GITHUB_OUTPUT
        fi 
        echo "channel=${GITHUB_REF_NAME}"
    - name: Get short SHA sum
      id: get-short-rev
      shell: bash
      run: echo "short-rev=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
    - name: Get the expected chart version
      id: get-chart-version
      uses: mikefarah/yq@master
      with:
        cmd: yq '.version' Chart.yaml
    - name: Package Helm chart with a build-specific version
      id: package-chart
      run: |
        version="${CHART_VERSION}.build.${SHORT_SHA}"
        helm package . --version="${version}" -u 
        echo "package=gitea-${version}.tgz" >> $GITHUB_OUTPUT
      env:
        CHART_VERSION: ${{ steps.get-chart-version.outputs.result }}
        SHORT_SHA: ${{ steps.get-short-rev.outputs.short-rev }}
    - name: Upload chart artifact
      id: uplaad-chart
      uses: actions/upload-artifact@master
      with:
        name: chart
        path: ${{ steps.package-chart.outputs.package }}
          
  get-customer-instances:
    needs:
    - package-chart
    outputs:
      matrix: ${{ steps.get-customer-instances.outputs.matrix}}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Get Customer Instances
        id: get-customer-instances
        uses: replicatedhq/replicated-actions/get-customer-instances@v1
        with:
          app-slug: ${{ secrets.REPLICATED_APP }}
          api-token: ${{ secrets.REPLICATED_API_TOKEN }}

  customer-representative-testing:
    needs: 
    - get-customer-instances
    if: ${{ !contains(needs.get-customer-instances.outputs.matrix, '[]') }}
    strategy:
      fail-fast: false
      matrix:
        cluster: ${{ fromJson(needs.get-customer-instances.outputs.matrix) }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Prepare Cluster
        id: prepare-cluster
        uses: replicatedhq/replicated-actions/prepare-cluster@v1
        with:
          app-slug: ${{ secrets.REPLICATED_APP }}
          api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          helm-chart-name: gitea
          chart: ${{ needs.package-chart.outputs.chart }}
          kubernetes-distribution: ${{ matrix.cluster.distribution }}
          kubernetes-version: ${{ matrix.cluster.version }}
